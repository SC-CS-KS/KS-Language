phpcpd
https://github.com/sebastianbergmann/phpcpd
PHPCPD是一个在代码中寻找类似模式的工具，使用它是为了在代码库中识别代码在何处被复制或粘贴。这是常规构建过程中一个非常有用的工具，它会帮助程序员分析代码，以避免在代码库中重复调用函数。

PHP-Parser
https://github.com/nikic/PHP-Parser
一个用PHP编写的PHP解析器（支持PHP 5.4以及更早的版本），这种特殊的解析器非常适合静态代码分析。
该工具的目的就是简化静态代码分析和操作，它使程序员能够以编程的方式来处理任何应用程序的代码。

PHPMD
这个工具能够探测PHP源代码中一些潜在的问题。例如：
可能存在的Bug
未达最佳标准的代码
过于复杂的语法
从未使用过的参数、方法、属性
https://phpmd.org/

PHPCheckstyle
一个帮助PHP程序员检查代码和报告错误的工具，运行于PHP 5.0以及更高的版本。
通过SVN钩子脚本的方式来调用PHPCheckstyle，
可以强制代码必须符合预先设定的编码标准（比如PEAR编码标准），
有助于在多人合作项目中提高代码整体质量。
https://phpcheckstyle.github.io/

Ubench
一个用于评测PHP代码执行时间和内存使用效率的开发库。
https://github.com/devster/ubench

PHP Analyzer
执行和编译器相同的流动分析，确保代码在每个潜在执行路径的每一行都执行了测试。
这种特殊的工具帮助开发人员提高了自己的代码质量，从而确保了工作效率。
https://scrutinizer-ci.com/docs/tools/php/php-analyzer/

phpUnderControl
如果你正在考虑上述提到的工具，那么你可以下载phpUnderControl这个工具，它基于CruiseControl构建。phpUnderControl包括了多个PHP工具，如phpunit,phpdocumentor,并提供了统一的界面管理。

PHP_CodeSniffer
https://github.com/squizlabs/PHP_CodeSniffer/

https://pdepend.org/
https://github.com/pdepend/pdepend


http://pear.php.net/package/PHP_CodeSniffer/

https://github.com/sebastianbergmann/bytekit-cli


https://github.com/Corveda/PHPSandbox
